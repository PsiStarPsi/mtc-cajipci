#Script generates pci_lib.c file
#which represents the supported device ID's and their special functions
import glob
import os

f = open('pci_lib.c', 'w');
inits = [];
def main():
	f.write("//This file is automatically generated, DONT edit it by hand, it will be overwriten on the next build cycle!!\n\n");
	f.write("#include \"lib/pci_lib.h\"\n");
	f.write("#include \"lib/pci.h\"\n\n");
	files = glob.glob("pci_lib/*.h");
	num_files = len(files);
	print str(num_files) + " device(s)  in the library"
	for file in files:
		f.write("#include \"" + file +"\"\n");
		extract_init(file);
	f.write("""
altix_pci_lib ** pci_lib;
int pci_lib_size;
void altix_pci_lib_init()
{
	pci_lib = (altix_pci_lib **)kmalloc(sizeof(altix_pci_lib*)""");
	f.write("*" + str(num_files) + ", GFP_KERNEL);\n");
	f.write("	pci_lib_size = " + str(num_files) +";\n");
	i = 0;
	for init in inits:
		f.write("	pci_lib["+ str(i) + "] = " + init + "();\n");
	f.write("}")
	f.write("""
void altix_pci_lib_free()
{
	int i;
	for(i = 0; i< pci_lib_size;i++)
	{
		kfree(pci_lib[i]);
	}
	kfree(pci_lib);
	pci_lib = NULL;
	pci_lib_size = 0;
}
""")
	

		
def extract_init(filename):
	cfile = open(filename);
	for line in cfile:
		tok = line.split(' ', 3);
		if(len(tok) > 2):
			if (tok[0] == "//pyhint"):
				if(tok[1] == "init"):
					inits.append(tok[2].strip());
		

main();
